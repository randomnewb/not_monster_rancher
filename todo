- Woodcutting feature has a few bugs

  - [x] keyboard "K" woodcutting should be same or similar to clicking version (right now player can bypass woodcutting counter)
  - [x] add a woodcutting animation
  - [x] if the player clicks on an obstruction tile, then tries to click somewhere else, they cannot pathfind around obstructions anymore

- [/] High Priority: Highlight the tile where the player is 'facing' or looking towards ala Stardew Valley while on mobile mode

  - [x] Works with both mouse input and keyboard input
  - We will use this to determine what the player is looking and if they can woodcut/mine, etc.
  - [x] add another action (life skills action), ("K" on keyboard and another clickable action box on mobile)

- [ ] create a util method that instantiates a random blank walking tile with meta data
- [x] terrain makes things hard to see, probably lower their transparency or dull them somehow
- [ ] terrainScene and uiScene should probably be more like utils or classes
- [ ] remove the data.playerhealth and try to implement playerhealth directly from the playerclass

  - in the UIscene's update(), let's detect if the player exists and update the healthbar directly from the playerclass's health

- [ ] need to refactor a bunch of things with constants
- [ ] Bug: jewels can spawn into rocks

- Life Skills system - chop trees, mine rocks, etc.

  - [ ] implement this with trees
    - have to implement a different encounter/'damage' system, woodcutting damage
  - [ ] implement this with rocks
    - mining damage

- [x] Bug: player clicking on same tile that they are already moving to creates jittering
- [ ] rework npcs so that level is created first, and then other stats are based on level

- [ ] tile system should get reworked and just implement grid-based movement from one of the tutorials probably

  - i.e., level 2, health will be health \* level

- [ ] add a spawner class (takes in an entity class), perhaps also has a physical body so can be destroyed/collided with
      or so that other things can inherit the spawner class

  - [ ] spawner class runs based on a counter/timer
  - [ ] does not run if there are too many enemies in a zone (probably max 100 at this point)

- [ ] implement the spawner in the world generation

  - try to create 3 of them to start, one for each current type of enemy

- [ ] make these destroyable

- [ ] add in a 'level up' animation (like ragnarok online?)

- [x] add player's level and exp to UIScene

- [x] customized exp algorithm

  - players can only ever get a max of 10 exp from any enemy or event and a minimum of 1 exp
  - players get exp towards a general level and also towards specific life skills
  - exp is calculated based on the player's life skills level and the enemy's/encounter level
  - need to create a skill tree menu for different life skills
    - combat, taming, mining, woodcutting, etc. and these can be broken down further
      - combat -> melee, ranged, magic, etc. and types of melee like sword vs axe vs spear

- player stats (strength, wisdom, dexterity, luck)

  - [ ] strength affects melee damage, health, possibly carry capacity
  - [ ] wisdom affects magic damage, magic defenses/resistances, mana
  - [ ] dexterity affects ranged damage, ranged defense, attack speed, movement speed
  - [ ] luck affects drop rates

- [ ] when player 'takes' positive damage, make damage text green or a different color

- [ ] bug: probably need to destroy all monsters when game is over or disable them when player dies

  - might also be a bug with the obstruction tiles/map array and a monster being on top of one of the tiles when the game restarts?

- implementing constants/enums

  - [ ] direction (up, down, left, right)

- [/] rework states and frog npc so that state reads properties/attributes or components more from the entity
- for example, the 'attack' alerting animation could be unique and defined in each entity
- or movement could be defined in each entity and read in the 'wander' state

- [/] refactor update() methods (build plugins or code to listen for update event) and listen for update event to run that specific code when event is fired, chunk code
- [ ] implement Tiled again for creating tilemaps with meta data (e.g. if a tile is collidable, interactable, etc.):

- [ ] create phaser plugins where possible for things like (e.g. playing sound effects, loading an area from a tilemap, controls available to my scene)
- [ ] implement player FSM
- [ ] continue to implement ECS: https://en.wikipedia.org/wiki/Entity_component_system

- refactor time?

  - [ ] separate components into own classes where possible
  - separate certain code into their own methods where possible
  - [x] preloading all assets can be in their own method (preloadAssets())

- [/] diablo style enemy name and health bar at bottom
- [ ] captured/tamed monsters have a different color outline than enemies
- [ ] elite monsters ('larger' or scaled up monsters)

- rework player death/game over

  - [ ] on player death, hide player active/visibility, but then allow user to just revive, teleport back to a set point (right now it is initial spawn, later on, maybe a saved point)
  - build in an in-game options menu when player hits ESC or presses gear icon on mobile and which pauses the game
    - this will allow players access to
      - [ ] resume game (close menu)
      - [ ] options (options will come later)
      - [ ] save and return to main menu (save will come later)

- [ ] Save/Load system

- [/] Bug: issue with state machine and NPC, if the NPC is destroyed (it seems like when this happens in its wander state)
  the game crashes because it is trying to setVelocity - Seems like bug is fixed...

- [ ] Bug: if the player uses keyboard input too quickly after starting a new game and before the map has time to finish generating, the game crashes

  - Probably need to implement some sort of loading screen and then allow the player to move and click the screen

- [ ] monsters have spawning requirements (random example, frogs can mate and lay eggs in water tiles)
- [ ] During generation, generate a barrier of walls or trees along the edges of the map
- [/] Show an indicator of where the player will fire at next or if they can fire at all

- [ ] potential issue with A\*: if original map is edited, need to make sure we update the map in data.js,
      such as if building is implemented or if obstructions are removed, the original array would need to be updated

- Implementing certain actions based on what a mobile user is clicking on

  - [ ] If the player clicks on a tree, the player will move towards the tree and chop it down
  - [ ] If the player clicks on a rock, the player will move towards the rock and mine it
  - [ ] If the player clicks on a monster, the player will move towards the monster and attack it
  - [ ] If the player clicks on a jewel, the player will move towards the jewel and pick it up

- [/] Invincibility added to frog

  - Actually setup frog being invincible during invincibility frames (100 milliseconds)

- [ ] Option to flip touch controls (left/right)

- [/] Health bar implementation

  - Jittery because its position is set to the player's position, need to implement move w/ camera

- [/] Implement one button for mobile

  - [x] Make sure it follows with the camera
  - [ ] (3 different actions [action1, action2, action3], and an inventory action)

- [ ] Attach weapon to the player/add a swing animation with the weapon
- [ ] Add interaction with projectile sprite (use its 16x16 hitbox) and tree tiles

- [ ] Rework tilemap system to include meta data if possible

  - Collidable, interactable, destroyable, drops certain items

- [ ] Implement pre-made structures in tilemap system (like a 2x2-sized tree or small structure)

- [ ] Pressing ESC opens up a pause/options menu

- [ ] Pixel Art: Log/sticks
- [ ] Pixel Art: Pebbles/small stones
- [ ] Pixel Art: General item/bag

- [ ] Interactive objects have outlines around them
- [ ] Continue implementing remaining scenes as their own classes/scripts
- [ ] Rewrite mapping function to map based on length of map rather than hard-coded size

- [ ] (OPTIONAL) Jewels drop out of player on hit
- [ ] Collectibles other than jewels
- [/] Monsters/beasts that wander around, attack player, interact with environment, drop items
- [/] Enemies (that wander around, attack player)
- [ ] Character customization/select screen
- [ ] Water tiles/swimming

- Inventory system via an array or grid inventory (stretch) system
  - [ ] Inventory UI
  - [ ] Inventory slots
  - [ ] Inventory items
  - [ ] Inventory item stats
  - [ ] Inventory item descriptions
  - [ ] Inventory item tooltips
  - [ ] Inventory item drag and drop
  - [ ] Inventory item equip
  - [ ] Inventory item unequip
  - [ ] Inventory item drop
  - [ ] Inventory item use
  - [ ] Inventory item stack
  - [ ] Inventory item split
  - [ ] Inventory item merge
  - [ ] Inventory item sort
  - [ ] Inventory item search
  - [ ] Inventory item filter
  - [ ] Inventory item highlight
- Game world/map also made of a 2d array
  - Broken into zones made of 32x32 tiles
  - Zones have properties like biomes/types, levels, etc. which also contain certain entities
